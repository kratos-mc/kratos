# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: "Node.js CI Testing"

on:
  push:
    branches: ["master", "release/**"]
  pull_request:
    branches: ["master", "release/**"]

jobs:
  build:
    runs-on: ${{ matrix.platform.os }}
    defaults:
      run:
        shell: ${{ matrix.platform.shell }}

    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
        # os: [windows-latest, macos-latest, ubuntu-latest]
        platform:
          - os: ubuntu-latest
            shell: bash
          - os: macos-latest
            shell: bash
          - os: windows-latest
            shell: bash
          - os: windows-latest
            shell: powershell
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"
      - run: yarn install --frozen-lockfile

      - run: yarn run build --if-present
      - run: yarn run test-unit

      - run: xvfb-run --auto-servernum --server-args="-screen 0 1280x960x24" -- yarn run test-e2e
        if: matrix.platform.os == 'ubuntu-latest'
      - run: yarn run test-e2e
        if: matrix.platform.os != 'ubuntu-latest'
      # Clean up everything after test
      - run: yarn run clean
